---
- name: Configure pfSense/OPNsense for KPN Internet with IPTV and IPsec VPN
  hosts: your_firewall_host
  gather_facts: no
  vars:
    wan_interface: "em0"  # Change this to your WAN interface name
    pppoe_username: "internet"
    pppoe_password: "internet"
    internet_vlan_id: "6"  # Change this to your Internet VLAN ID
    internet_interface: "em0.6"  # Change this to your Internet interface
    iptv_vlan_id: "4"  # Change this to your IPTV VLAN ID
    iptv_interface: "em0.4"  # Change this to your IPTV interface
    remote_ip: "5.6.7.8"
    local_ip: "1.2.3.4"
    remote_subnet: "192.168.178.0/24"
    local_subnet: "192.168.2.0/24"
    api_username: "your_api_username"
    api_password: "your_api_password"

  tasks:
    - name: Install required packages
      pkg:
        name: "curl,strongswan"
        state: present

    - name: Set WAN interface to PPPoE with IPv6 support
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"if": "{{ wan_interface }}", "type": "pppoe", "username": "{{ pppoe_username }}", "password": "{{ pppoe_password }}", "descr": "KPN PPPoE", "ipv6mode": "dhcp6"}'
        http://localhost/api/v1/interfaces

    - name: Set up Internet VLAN
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"if": "{{ internet_interface }}", "tag": "{{ internet_vlan_id }}", "descr": "Internet"}'
        http://localhost/api/v1/interfaces/vlan

    - name: Set up IPTV VLAN
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"if": "{{ iptv_interface }}", "tag": "{{ iptv_vlan_id }}", "descr": "IPTV"}'
        http://localhost/api/v1/interfaces/vlan

    - name: Configure Internet firewall rules for IPv4
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "descr": "Allow Internet (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure Internet firewall rules for IPv6
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet6", "descr": "Allow Internet (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure IPTV firewall rules for IPv4
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"type": "pass", "interface": "{{ iptv_interface }}", "ipprotocol": "inet", "protocol": "igmp", "descr": "Allow IGMP (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure IPTV firewall rules for IPv6
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"type": "pass", "interface": "{{ iptv_interface }}", "ipprotocol": "inet6", "protocol": "igmp", "descr": "Allow IGMP (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    - name: Open SSH port for destination IP 192.168.2.2 with low latency
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "192.168.2.2", "destinationport": "22", "descr": "Allow SSH to 192.168.2.2"}'
        http://localhost/api/v1/firewall/rules

    - name: Open HTTP and HTTPS ports for destination IP 1.2.3.4
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "80", "descr": "Allow HTTP to 1.2.3.4"}'
        http://localhost/api/v1/firewall/rules &&
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "443", "descr": "Allow HTTPS to 1.2.3.4"}'
        http://localhost/api/v1/firewall/rules

    - name: Open SMTP (25) and Submission (587) ports for destination IP 1.2.3.4
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "25", "descr": "Allow SMTP to 1.2.3.4"}, {"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "587", "descr": "Allow Submission to 1.2.3.4"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure QoS for SSH with low latency
      command: >
        curl -X POST -d '{"interface": "{{ internet_interface }}", "descr": "QoS for SSH", "ipprotocol": "inet", "tag": "22", "tagged": false, "pipe": "40"}'
        http://localhost/api/v1/firewall/shaper

    - name: Configure QoS for Gaming for low ping
      command: >
        curl -X POST -d '{"interface": "{{ internet_interface }}", "descr": "QoS for Gaming", "ipprotocol": "inet", "tag": "3074,27015", "tagged": true, "pipe": "60"}'
        http://localhost/api/v1/firewall/shaper

    - name: Configure QoS for VoIP applications for consistent performance
      command: >
        curl -X POST -d '{"interface": "{{ internet_interface }}", "descr": "QoS for VoIP", "ipprotocol": "inet", "tag": "5060,5061,1720,19302", "tagged": true, "pipe": "50"}'
        http://localhost/api/v1/firewall/shaper

    - name: Configure IPsec VPN
      command: >
        curl -u "{{ api_username }}:{{ api_password }}" -X POST -d '{"ikeid":"1", "auto":"add", "mode":"tunnel", "protocol":"esp", "src":"{{ local_ip }}", "dst":"{{ remote_ip }}", "descr":"IPsec VPN to Remote", "remote-gateway":"{{ remote_ip }}", "remote-subnet":"{{ remote_subnet }}", "local-subnet":"{{ local_subnet }}", "negotiation_mode":"main", "auth_method":"psk", "encryption":"aes128", "hash_algorithm":"sha256", "lifetime":"3600", "dpd_delay":"10", "dpd_maxfail":"5"}' http://localhost/api/v1/ipsec/phase1
