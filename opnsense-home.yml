---
- name: Configure pfSense/OPNsense for KPN Internet with IPTV
  hosts: your_firewall_host
  gather_facts: no
  vars:
    wan_interface: "em0"  # Change this to your WAN interface name
    pppoe_username: "internet"
    pppoe_password: "internet"
    internet_vlan_id: "6"  # Change this to your Internet VLAN ID
    internet_interface: "em0.6"  # Change this to your Internet interface
    iptv_vlan_id: "4"  # Change this to your IPTV VLAN ID
    iptv_interface: "em0.4"  # Change this to your IPTV interface

  tasks:
    - name: Install required packages
      pkg:
        name: "curl,gateway_mon"
        state: present

    - name: Set WAN interface to PPPoE with IPv6 support
      command: >
        curl -X POST -d '{"if": "{{ wan_interface }}", "type": "pppoe", "username": "{{ pppoe_username }}", "password": "{{ pppoe_password }}", "descr": "KPN PPPoE", "ipv6mode": "dhcp6"}'
        http://localhost/api/v1/interfaces

    - name: Set up Internet VLAN
      command: >
        curl -X POST -d '{"if": "{{ internet_interface }}", "tag": "{{ internet_vlan_id }}", "descr": "Internet"}'
        http://localhost/api/v1/interfaces/vlan

    - name: Set up IPTV VLAN
      command: >
        curl -X POST -d '{"if": "{{ iptv_interface }}", "tag": "{{ iptv_vlan_id }}", "descr": "IPTV"}'
        http://localhost/api/v1/interfaces/vlan

    - name: Configure Internet firewall rules for IPv4
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "descr": "Allow Internet (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure Internet firewall rules for IPv6
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet6", "descr": "Allow Internet (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure IPTV firewall rules for IPv4
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ iptv_interface }}", "ipprotocol": "inet", "protocol": "igmp", "descr": "Allow IGMP (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure IPTV firewall rules for IPv6
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ iptv_interface }}", "ipprotocol": "inet6", "protocol": "igmp", "descr": "Allow IGMP (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    - name: Open SSH port for destination IP 192.168.2.2 with low latency (IPv4)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "192.168.2.2", "destinationport": "22", "descr": "Allow SSH to 192.168.2.2 (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Open SSH port for destination IP 192.168.2.2 with low latency (IPv6)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet6", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "192.168.2.2", "destinationport": "22", "descr": "Allow SSH to 192.168.2.2 (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    - name: Open HTTP and HTTPS ports for destination IP 1.2.3.4 (IPv4)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "80", "descr": "Allow HTTP to 1.2.3.4 (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Open HTTP and HTTPS ports for destination IP 1.2.3.4 (IPv6)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet6", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "80", "descr": "Allow HTTP to 1.2.3.4 (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure HTTPS (IPv4)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "443", "descr": "Allow HTTPS to 1.2.3.4 (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Configure HTTPS (IPv6)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet6", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "443", "descr": "Allow HTTPS to 1.2.3.4 (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    - name: Open SMTP (25) and Submission (587) ports for destination IP 1.2.3.4 (IPv4)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "25", "descr": "Allow SMTP to 1.2.3.4 (IPv4)"}, {"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "587", "descr": "Allow Submission to 1.2.3.4 (IPv4)"}'
        http://localhost/api/v1/firewall/rules

    - name: Open SMTP (25) and Submission (587) ports for destination IP 1.2.3.4 (IPv6)
      command: >
        curl -X POST -d '{"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet6", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "25", "descr": "Allow SMTP to 1.2.3.4 (IPv6)"}, {"type": "pass", "interface": "{{ internet_interface }}", "ipprotocol": "inet6", "protocol": "tcp", "source": "any", "sourceport": "", "destination": "1.2.3.4", "destinationport": "587", "descr": "Allow Submission to 1.2.3.4 (IPv6)"}'
        http://localhost/api/v1/firewall/rules

    # Additional tasks like QoS, NAT, firewall rules, etc. can be added here
